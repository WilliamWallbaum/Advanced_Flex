{% comment %}
  Required values
  image: <image object>
  alt: <image alt property>
  ______________
  Optional values
  progressive: <boolean>
  stretch_width: <boolean>
  figure_classes: <string>
  additional_classes: <string>
  inline_style: <string>
  back_to_basics: <boolean>
  object_fit: <boolean>
  image_crop: <boolean>
  max_height: <number>
  calculate_aspect_ratio: <boolean>
{% endcomment %}

{%- assign img_url_opts = '5000x' -%}
{%- assign low_quality_image = image | img_url: '50x' -%}
{%- assign srcset = '' -%}
{%- for i in (5000..200).step(-200) -%}
  {%- capture srcset_item -%}
    {{ image | img_url: img_url_opts }}
    {%- if i > 200 -%}
      {{ i }}w,
    {%- endif -%}
  {%- endcapture -%}
  {%- assign srcset = srcset | append: srcset_item -%}
  {%- unless i == 200 -%}
    {%- assign img_url_opts = img_url_opts | replace: '5000x', i ~ 'x' -%}
  {%- endunless -%}
{%- endfor -%}

<figure class="image-element__wrap {{ figure_classes }}" style="{{ image_background_color }}{{ height_style }}">
  <img
    alt="{{ alt | escape }}"
    class="lazyload transition--{{ settings.image_loading_style }} {{ additional_classes }}"
    {% if low_quality_image %}
      src="{{ low_quality_image }}"
    {% endif %}
    data-src="{{ image | img_url: '1600x' }}"
    data-sizes="auto"
    data-srcset="{{ srcset }}"
    data-aspectratio="{{ image.width }}/{{ image.height }}"
    height="{{ image.height }}"
    width="{{ image.width }}"
    srcset="data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='{{ image.width }}' height='{{ image.height }}'></svg>"
    style="{{ inline_style }};{{ height_style }}"
  >
</figure>

<noscript class="noscript">
  <img class="{{ additional_classes }}" src="{{ image | img_url: '2000x' }}" alt="{{ alt | escape }}">
</noscript>

{% style %}
  figure.image-element__wrap {
    margin: 0;
  }
{% endstyle %}
